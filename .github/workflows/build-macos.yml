name: build-macos

# make the action not run on the local repo if the branch is also in a pull request to OF/OF
on: [push]
 
env:
  ccache: ccache

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-macos:
    runs-on: macos-13
    strategy:
        matrix:
          cfg:
          - {target: osx, opt: "xcode"}
          # - {target: osx, opt: "makefiles"}
    steps:
    - name: checkout openframeworks
      uses: actions/checkout@v4
      with:
        repository: openframeworks/openFrameworks
    # now we add in ofxLaser as addon
    - name: checkout ofxLaser
      uses: actions/checkout@v4
      with:
        path: ${{ github.workspace }}/addons/ofxLaser
    # and here we replace the empty example with the hello laser example
    - name: remove emptyExample
      run: rm -r ${{ github.workspace }}/examples/templates/emptyExample
    - name: replace emptyExample with example_HelloLaser
      run: cp -r ${{ github.workspace }}/addons/ofxLaser/example_HelloLaser ${{ github.workspace }}/examples/templates/emptyExample

    # continue openframeworks defined pipeline
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.12
      with:
        # key: ${{ matrix.os }}-${{ matrix.type }}
        key: ${{ matrix.cfg.target }}-${{ matrix.cfg.opt }}
        # key: ${{ matrix.msystem }}


    - name: Download libs
      # continue-on-error: true
      run: ./scripts/${{ matrix.cfg.target }}/download_libs.sh
#    - name: rm-dev
#      run: sudo rm -rf /Library/Developer

    # this step is not needed here because the script is empty
    # - name: install
    # run: ./scripts/ci/$TARGET/install.sh

    - name: Build
      run:
        if [ ${{ matrix.cfg.opt }} = "xcode" ]; then
          scripts/ci/${{ matrix.cfg.target }}/build.sh ${{ matrix.cfg.opt }};
        else
          scripts/ci/${{ matrix.cfg.target }}/run_tests.sh;
        fi
      env:
        DEVELOPER_DIR: "/Applications/Xcode.app/Contents/Developer"
        SDKROOT: "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
